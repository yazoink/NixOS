#!/run/current-system/sw/bin/bash

HOSTNAME=$(hostname)
# switch, test, boot
SWITCH_OPTS=("-s" "-t" "-b")
# trace/debug
EXTRA_OPTS=("-d" "-u")

function main() {
  switch_arg=""
  extra_args=""
  switch_opt="$(get_switch_opt "$@")"
  do_update=false
  git_enabled=false

  ret=$(which git)
  [ "$ret" == 0 ] && git_enabled=true

  case "$switch_opt" in
    "-s") switch_arg="switch";;
    "-t") switch_arg="test";;
    "-b") switch_arg="boot";;
    *) echo "Error: something went wrong"; exit 1;;
  esac

  IFS=" " read -ra extra_opts_array <<< "$(get_extra_opts "$@")"

  for opt in "${extra_opts_array[@]}"; do
    case "$opt" in
      "-d") extra_args="$extra_args --show-trace";;
      "-u") do_update=true;;
      *) echo "Error: something went wrong"; exit 1;;
    esac
  done

  [ "$do_update" == true ] && {
    echo "Updating flake inputs..." 
    sudo nix flake update --flake "$HOME/nixos"
    git_enabled && {
      git -C "$HOME/nixos" add "$HOME/nixos/flake.lock"
      git commit -m "Update flake inputs"
    }
  }

  echo "Rebuilding system..."
  sudo nixos-rebuild "$switch_arg" --flake "$HOME/nixos#$HOSTNAME $extra_args"

  case $? in
    0) notify-send "Rebuild complete!";;
    *) notify-send "Rebuild failed!";;
  esac
}

function get_extra_opts() {
  extra_opts_string=""
  for arg in "$@"; do
    for opt in "${EXTRA_OPTS[@]}"; do
      if [ "$opt" == "$arg" ]; then
        extra_opts_string="$extra_opts_string $arg"
      fi
    done
  done
  echo "$extra_opts_string"
}

function get_switch_opt() {
  switch_opt_found=false
  switch_opt="-s"

  for arg in "$@"; do
    for opt in "${SWITCH_OPTS[@]}"; do
      if [ "$opt" == "$arg" ]; then
        if [ "$switch_opt_found" == "false" ]; then
          switch_opt_found=true
          switch_opt="$opt"
        else
          echo "Error: more than one switch opt."
          exit 1
        fi
      fi
    done
  done

  echo "$switch_opt"
}

function help() {
  echo "usage: rebuild [option(s)]"
  echo "options:"
  echo "    -s: rebuild switch"
  echo "    -t: rebuild test"
  echo "    -b: rebuild boot"
  echo "    -d: --show-trace"
  echo "    -u: update flake inputs before rebuilding"
}

main "$@"
